/*! HTML5 Boilerplate v4.3.0 | MIT License | http://h5bp.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html,
button,
input,
select,
textarea {
    color: #222;
}

html {
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between images, videos, audio and canvas and the bottom of
 * their containers: h5bp.com/i/440
 */

audio,
canvas,
img,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browse Happy prompt
   ========================================================================== */

.browsehappy {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

header {
    background: url('bgimages/grains.jpg');
    background-size: cover;
    padding-bottom: 20%;
    position: relative;
}
header:before {
  position: absolute;
  content: '';
  width: 100%;
  height: 100%;
  background: rgba(11, 52, 150, 0.5);
}
header span {
    visibility: hidden;
}


header nav a {
    text-decoration: none;
    color: #0b3451;
    text-align: center;
}
.icon {
    text-align: center;
    color: #115281;
}
.titletext {
    text-align: center;
}
.titletext h1 {
    color: white;
    margin: 0;
    padding: 0;
    position: relative;
    z-index: 15;
}
.titletext h2 {
    color: #000000;
    margin: 0;
    padding: 0;
    font-size: .75em;
}

#container {
    
}
article {
    
}
h3 {
    color: #052947;
    font-size: 2em;
}
time {
    color: #ACBCC5;
    text-decoration: underline;
}
blockquote {
    color: #1869B2;
    border-left: 3px solid #ACBCC5;
    font-size: 1.5em;
}
#authorinfo {
    text-align: center;
}
#authorinfo > img {
    width: 5em;
    border-radius: 50%;
}
#authorinfo > img > p {
    font-size: 2em;
}
.sociallinks {
    margin-bottom: 2em;
}
.sociallinks a {
    color: #ACBCC5;
    text-decoration: none;
    margin: .5em;
}
/* using the a tag instead of an ul and li as I used to seems to make like a bit eaiser. after practicng with both I dont really understand the different use case for each.  could you elaborate on why? It just seems like a random scenario for me to do a ul/li inline vs just a bunch of a's with the latter allowing me to get away with less typing? is that it? am I trying to read too far into this? just looking for a best practice */
figure {
}
figure img {
    width: 100%;
}
.overlayfig {
    width: 80%;
    position: relative;
    margin: 0 auto;
}
/* it still seems to take me a few tries to remember that the width via  % of something is the % of its parent. therefore setting the parent to whatever percent and the internal block to 100% snaps it to the edges of the div or whatever element.  mostly typing this for torturous repition for myself but also if you had any other input about things that I could have done easier. a lot of the rules are now making perfect sense its just spending the time to perfect things as best as I can that i may have screwed up */

.overlayfig:before {
    position: absolute;
    content: '';
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    background: rgba(11, 52, 150, 0.5);
    z-index: 9001;
}

figcaption {
    text-align: right;
    margin-right: 10%;
    position: relative;
    color: #ACBCC5;
    text-decoration: underline;
}
h4 {
    display: none;
}
#authorinfo p {
    display: none;
}

.clearboth {
    border-bottom: 1px solid #AAAAAA;
    clear: both;
}
.mostpop {
    font-size: 1.5em;
}
.blocks a {
        position: relative;
        display: block;
        padding-right: 100%;
        padding-bottom: 100%;
        text-decoration: none;
        color: white;
        font-size: 4em;
        width: 90%;
        box-sizing: border-box;
        overflow: hidden;
        margin: .1em;
    }
.blocks img {
        position: absolute;
        height: 100%;
        z-index: 5;
        display: block;
        box-sizing: border-box;
        
}
.blocks span {
        position: absolute;
        bottom: 0;
        z-index: 9;
}
/* I understand why the above is happening, I think. The image is taller than the box so it lowers it.  when I attempt to correct this through using a percent or anything else I seem to run into the same issue. how would I fix this.  I dont really get what I did to fix this but it is somehow fixed now via fiddling with other things.  leaving the comment for your input. */
.alltheboxes {
    margin: 0 auto;
    width: 90%;
}
.alltheboxes a:before {
  position: absolute;
  content: '';
  width: 100%;
  height: 100%;
  background: rgba(11, 52, 150, 0.5);
  z-index: 12;
  transition: background 0.3s ease;
}
nav {
}
.alltheboxes a:hover:before {
  background: rgba(255, 255, 255, 0);
}
.blocks a:last-child {
    display: none;
}
.blocks img:last-child {
    display: none;
}
.clearfix {
    background-color: #115281;
    color: #8C9d9a;
}
.clearfix img {
    width: 5em;
    border-radius: 50%;
}
footer {
    text-align: center;
}
footer ul {
    
}
footer ul li {
    display: inline-block;
    margin: .25em;
    border-right: 1px solid #ACBCC5;
}

/* TABLET SIZE 
%%%%%%%%%%%%%%
*/
@media only screen and (min-width: 600px) {
 
header nav {
    text-align: right;
    margin-right: 4em;
    
}
header span {
    visibility: visible;    
}    
.icon {
    position: absolute;
    top: 0;
    left: 5em;
}
h1 {
    position: absolute;
    top: 2.5em;
    
}
h2 {
    position: absolute;
    top 5em;
}
    
    
#container {
    width: 80%;
    margin: 0 auto; 
}
article {
    width: 60%;
    float: left;
    
}
 #authorinfo {
     float: left;
     width: 35%;
     margin-top: 3em;
     padding-left: 5%;
 }   
    
    
.alltheboxes {
    width: 100%;
} 
 .blocks a {
     float: left;
     padding-right: 33%;
     padding-bottom: 33%;
     width: 33%;
     margin: 0;
 }
    .blocks span {
        font-size: .5em;
    }
    
    
    
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Image replacement
 */

.ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    /* IE 6/7 fallback */
    *text-indent: -9999px;
}

.ir:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
}

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */

.hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screenreaders, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-o-min-device-pixel-ratio: 5/4),
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid required HTTP connection: h5bp.com/r
   ========================================================================== */

@media print {
    * {
        background: transparent !important;
        color: #000 !important; /* Black prints faster: h5bp.com/s */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links for images, or javascript/internal links
     */

    .ir a:after,
    a[href^="javascript:"]:after,
    a[href^="#"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    thead {
        display: table-header-group; /* h5bp.com/t */
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    @page {
        margin: 0.5cm;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
